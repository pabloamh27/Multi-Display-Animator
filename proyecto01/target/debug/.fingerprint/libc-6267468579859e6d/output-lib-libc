{"message":"the trait bound `*mut ucontext_t: Default` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs","byte_start":7669,"byte_end":7697,"line_start":288,"line_end":288,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"        pub uc_link: *mut ucontext_t,","highlight_start":9,"highlight_end":37}],"label":"the trait `Default` is not implemented for `*mut ucontext_t`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs","byte_start":7590,"byte_end":7597,"line_start":285,"line_end":285,"column_start":14,"column_end":21,"is_primary":false,"text":[{"text":"    #[derive(Default)]","highlight_start":14,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Default)]","def_site_span":{"file_name":"/home/estudiante/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs","byte_start":4379,"byte_end":4396,"line_start":185,"line_end":185,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub macro Default($item:item) {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Default` is implemented for `ucontext_t`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `*mut ucontext_t: Default` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:288:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Default)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this derive macro expansion\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub uc_link: *mut ucontext_t,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Default` is not implemented for `*mut ucontext_t`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Default` \u001b[0m\u001b[0m\u001b[1mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1mucontext_t\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `b64::x86_64::stack_t: Default` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs","byte_start":7707,"byte_end":7730,"line_start":289,"line_end":289,"column_start":9,"column_end":32,"is_primary":true,"text":[{"text":"        pub uc_stack: ::stack_t,","highlight_start":9,"highlight_end":32}],"label":"the trait `Default` is not implemented for `b64::x86_64::stack_t`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs","byte_start":7590,"byte_end":7597,"line_start":285,"line_end":285,"column_start":14,"column_end":21,"is_primary":false,"text":[{"text":"    #[derive(Default)]","highlight_start":14,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Default)]","def_site_span":{"file_name":"/home/estudiante/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs","byte_start":4379,"byte_end":4396,"line_start":185,"line_end":185,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub macro Default($item:item) {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `b64::x86_64::stack_t: Default` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:289:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Default)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this derive macro expansion\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub uc_stack: ::stack_t,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Default` is not implemented for `b64::x86_64::stack_t`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `mcontext_t: Default` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs","byte_start":7740,"byte_end":7767,"line_start":290,"line_end":290,"column_start":9,"column_end":36,"is_primary":true,"text":[{"text":"        pub uc_mcontext: mcontext_t,","highlight_start":9,"highlight_end":36}],"label":"the trait `Default` is not implemented for `mcontext_t`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs","byte_start":7590,"byte_end":7597,"line_start":285,"line_end":285,"column_start":14,"column_end":21,"is_primary":false,"text":[{"text":"    #[derive(Default)]","highlight_start":14,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Default)]","def_site_span":{"file_name":"/home/estudiante/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs","byte_start":4379,"byte_end":4396,"line_start":185,"line_end":185,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub macro Default($item:item) {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `mcontext_t: Default` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:290:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Default)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this derive macro expansion\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub uc_mcontext: mcontext_t,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Default` is not implemented for `mcontext_t`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `b64::sigset_t: Default` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs","byte_start":7777,"byte_end":7803,"line_start":291,"line_end":291,"column_start":9,"column_end":35,"is_primary":true,"text":[{"text":"        pub uc_sigmask: ::sigset_t,","highlight_start":9,"highlight_end":35}],"label":"the trait `Default` is not implemented for `b64::sigset_t`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs","byte_start":7590,"byte_end":7597,"line_start":285,"line_end":285,"column_start":14,"column_end":21,"is_primary":false,"text":[{"text":"    #[derive(Default)]","highlight_start":14,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Default)]","def_site_span":{"file_name":"/home/estudiante/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs","byte_start":4379,"byte_end":4396,"line_start":185,"line_end":185,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub macro Default($item:item) {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider annotating `b64::sigset_t` with `#[derive(Default)]`","code":null,"level":"help","spans":[{"file_name":"/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/macros.rs","byte_start":2725,"byte_end":2725,"line_start":77,"line_end":77,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"            pub struct $i { $($field)* }","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"#[derive(Default)]\n","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/macros.rs","byte_start":2232,"byte_end":2277,"line_start":66,"line_end":66,"column_start":9,"column_end":54,"is_primary":false,"text":[{"text":"        s!(it: $(#[$attr])* pub $t $i { $($field)* });","highlight_start":9,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/unix/linux_like/linux/gnu/b64/mod.rs","byte_start":800,"byte_end":2658,"line_start":29,"line_end":92,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"s! {","highlight_start":1,"highlight_end":5},{"text":"    pub struct sigset_t {","highlight_start":1,"highlight_end":26},{"text":"        #[cfg(target_pointer_width = \"32\")]","highlight_start":1,"highlight_end":44},{"text":"        __val: [u32; 32],","highlight_start":1,"highlight_end":26},{"text":"        #[cfg(target_pointer_width = \"64\")]","highlight_start":1,"highlight_end":44},{"text":"        __val: [u64; 16],","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sysinfo {","highlight_start":1,"highlight_end":25},{"text":"        pub uptime: i64,","highlight_start":1,"highlight_end":25},{"text":"        pub loads: [u64; 3],","highlight_start":1,"highlight_end":29},{"text":"        pub totalram: u64,","highlight_start":1,"highlight_end":27},{"text":"        pub freeram: u64,","highlight_start":1,"highlight_end":26},{"text":"        pub sharedram: u64,","highlight_start":1,"highlight_end":28},{"text":"        pub bufferram: u64,","highlight_start":1,"highlight_end":28},{"text":"        pub totalswap: u64,","highlight_start":1,"highlight_end":28},{"text":"        pub freeswap: u64,","highlight_start":1,"highlight_end":27},{"text":"        pub procs: ::c_ushort,","highlight_start":1,"highlight_end":31},{"text":"        pub pad: ::c_ushort,","highlight_start":1,"highlight_end":29},{"text":"        pub totalhigh: u64,","highlight_start":1,"highlight_end":28},{"text":"        pub freehigh: u64,","highlight_start":1,"highlight_end":27},{"text":"        pub mem_unit: ::c_uint,","highlight_start":1,"highlight_end":32},{"text":"        pub _f: [::c_char; 0],","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct msqid_ds {","highlight_start":1,"highlight_end":26},{"text":"        pub msg_perm: ::ipc_perm,","highlight_start":1,"highlight_end":34},{"text":"        pub msg_stime: ::time_t,","highlight_start":1,"highlight_end":33},{"text":"        pub msg_rtime: ::time_t,","highlight_start":1,"highlight_end":33},{"text":"        pub msg_ctime: ::time_t,","highlight_start":1,"highlight_end":33},{"text":"        __msg_cbytes: u64,","highlight_start":1,"highlight_end":27},{"text":"        pub msg_qnum: ::msgqnum_t,","highlight_start":1,"highlight_end":35},{"text":"        pub msg_qbytes: ::msglen_t,","highlight_start":1,"highlight_end":36},{"text":"        pub msg_lspid: ::pid_t,","highlight_start":1,"highlight_end":32},{"text":"        pub msg_lrpid: ::pid_t,","highlight_start":1,"highlight_end":32},{"text":"        __glibc_reserved4: u64,","highlight_start":1,"highlight_end":32},{"text":"        __glibc_reserved5: u64,","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct semid_ds {","highlight_start":1,"highlight_end":26},{"text":"        pub sem_perm: ipc_perm,","highlight_start":1,"highlight_end":32},{"text":"        pub sem_otime: ::time_t,","highlight_start":1,"highlight_end":33},{"text":"        #[cfg(not(any(","highlight_start":1,"highlight_end":23},{"text":"            target_arch = \"aarch64\",","highlight_start":1,"highlight_end":37},{"text":"            target_arch = \"loongarch64\",","highlight_start":1,"highlight_end":41},{"text":"            target_arch = \"mips64\",","highlight_start":1,"highlight_end":36},{"text":"            target_arch = \"powerpc64\",","highlight_start":1,"highlight_end":39},{"text":"            target_arch = \"riscv64\",","highlight_start":1,"highlight_end":37},{"text":"            target_arch = \"sparc64\")))]","highlight_start":1,"highlight_end":40},{"text":"        __reserved: ::__syscall_ulong_t,","highlight_start":1,"highlight_end":41},{"text":"        pub sem_ctime: ::time_t,","highlight_start":1,"highlight_end":33},{"text":"        #[cfg(not(any(","highlight_start":1,"highlight_end":23},{"text":"            target_arch = \"aarch64\",","highlight_start":1,"highlight_end":37},{"text":"            target_arch = \"loongarch64\",","highlight_start":1,"highlight_end":41},{"text":"            target_arch = \"mips64\",","highlight_start":1,"highlight_end":36},{"text":"            target_arch = \"powerpc64\",","highlight_start":1,"highlight_end":39},{"text":"            target_arch = \"riscv64\",","highlight_start":1,"highlight_end":37},{"text":"            target_arch = \"sparc64\")))]","highlight_start":1,"highlight_end":40},{"text":"        __reserved2: ::__syscall_ulong_t,","highlight_start":1,"highlight_end":42},{"text":"        pub sem_nsems: ::__syscall_ulong_t,","highlight_start":1,"highlight_end":44},{"text":"        __glibc_reserved3: ::__syscall_ulong_t,","highlight_start":1,"highlight_end":48},{"text":"        __glibc_reserved4: ::__syscall_ulong_t,","highlight_start":1,"highlight_end":48},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"s!","def_site_span":{"file_name":"/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/macros.rs","byte_start":2132,"byte_end":2146,"line_start":64,"line_end":64,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"macro_rules! s {","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"s!","def_site_span":{"file_name":"/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/macros.rs","byte_start":2132,"byte_end":2146,"line_start":64,"line_end":64,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"macro_rules! s {","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `b64::sigset_t: Default` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:291:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Default)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this derive macro expansion\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub uc_sigmask: ::sigset_t,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Default` is not implemented for `b64::sigset_t`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider annotating `b64::sigset_t` with `#[derive(Default)]`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> |\u001b[0m\u001b[0m/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/macros.rs:77:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m#[derive(Default)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"the trait bound `[u8; 512]: Default` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs","byte_start":7813,"byte_end":7833,"line_start":292,"line_end":292,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        __private: [u8; 512],","highlight_start":9,"highlight_end":29}],"label":"the trait `Default` is not implemented for `[u8; 512]`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs","byte_start":7590,"byte_end":7597,"line_start":285,"line_end":285,"column_start":14,"column_end":21,"is_primary":false,"text":[{"text":"    #[derive(Default)]","highlight_start":14,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Default)]","def_site_span":{"file_name":"/home/estudiante/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs","byte_start":4379,"byte_end":4396,"line_start":185,"line_end":185,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub macro Default($item:item) {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Default`:\n  &[T]\n  &mut [T]\n  [T; 0]\n  [T; 10]\n  [T; 11]\n  [T; 12]\n  [T; 13]\n  [T; 14]\nand 27 others","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `[u8; 512]: Default` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/estudiante/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.134/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:292:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Default)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this derive macro expansion\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        __private: [u8; 512],\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Default` is not implemented for `[u8; 512]`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Default`:\u001b[0m\n\u001b[0m              &[T]\u001b[0m\n\u001b[0m              &mut [T]\u001b[0m\n\u001b[0m              [T; 0]\u001b[0m\n\u001b[0m              [T; 10]\u001b[0m\n\u001b[0m              [T; 11]\u001b[0m\n\u001b[0m              [T; 12]\u001b[0m\n\u001b[0m              [T; 13]\u001b[0m\n\u001b[0m              [T; 14]\u001b[0m\n\u001b[0m            and 27 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 5 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 5 previous errors\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0277`.\u001b[0m\n"}
